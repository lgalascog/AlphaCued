   
% Put a grating on the right side
    %gabortex = CreateProceduralGabor(myWindow, INFO.P.screen.cx,INFO.P.screen.cy, [], [0.5 0.5 0.5 0.0]);
    gabortex = CreateProceduralGabor(myWindow, INFO.P.screen.cx+INFO.P.radius*cos(angle_right*pi/180),...
        INFO.P.screen.cy+INFO.P.radius*sin(angle_right*pi/180), [], [0.5 0.5 0.5 0.0]);
        % INFO.P.screen.cy : center of the screen on the Y axis 
        % INFO.P.radius*sin(angle_right*pi/180) : r*sin(t)
        % Correspond to this mathematical formula : x = x0 + r*cos(t) (r = radius and t = angle in radius)
    Screen('DrawTexture', myWindow, gabortex, [], [], INFO.P.grating_tilt_tilt, [], [], [], [], kPsychDontDoRotation,...
        [INFO.P.grating_tilt_phase+180, INFO.P.grating_tilt_freq, INFO.P.grating_tilt_sc,...
        INFO.P.grating_tilt_contrast, INFO.P.grating_tilt_aspectratio, 0, 0, 0]);
    Screen('Flip', myWindow);
    
    % Put a grating on the left side
    gabortex = CreateProceduralGabor(myWindow, INFO.P.screen.cx+INFO.P.radius*cos(angle_tilt_left*pi/180),...
        INFO.P.screen.cy+INFO.P.radius*sin(angle_tilt_left*pi/180), [], [0.5 0.5 0.5 0.0]);
    Screen('DrawTexture', myWindow, gabortex, [], [], INFO.P.grating_tilt_tilt, [], [], [], [], kPsychDontDoRotation,...
        [INFO.P.grating_tilt_phase+180, INFO.P.grating_tilt_freq, INFO.P.grating_tilt_sc,...
        INFO.P.grating_tilt_contrast, INFO.P.grating_tilt_aspectratio, 0, 0, 0]);
    
    Screen('Flip', myWindow);